Help on module inc_noesis:

NAME
    inc_noesis

DESCRIPTION
    #You should not modify or redistribute this file, as you may break compatibility with future versions of Noesis.
    #This module also defines several classes which are integrated with the Noesis native binary Python module, so changing those will cause things to explode.

CLASSES
    builtins.object
        NoeAngles
        NoeAnim
        NoeBone
        NoeFileStream
        NoeFlatWeights
        NoeGlobalVert
        NoeKeyFramedAnim
        NoeKeyFramedBone
        NoeKeyFramedValue
        NoeMat43
        NoeMat44
        NoeMaterial
        NoeMesh
        NoeModel
        NoeModelMaterials
        NoeMorphFrame
        NoePS2VIFUnpack
        NoePSPVert
        NoePreserveRapiContext
        NoeProceduralAnim
        NoeQuat
        NoeQuat3
        NoeSpline
        NoeSplineKnot
        NoeSplineSet
        NoeTexture
        NoeUnpacker
            NoeBitStream
        NoeUserStream
        NoeVec3
        NoeVec4
        NoeVertWeight
    
    class NoeAngles(builtins.object)
     |  #Euler angles (can and occasionally is also used to store radians, see also noesis.g_flDegToRad/noesis.g_flRadToDeg constants)
     |  
     |  Methods defined here:
     |  
     |  __add__(self, other)
     |  
     |  __div__(self, other)
     |  
     |  __eq__(self, other)
     |  
     |  __getitem__(self, index)
     |  
     |  __init__(self, angles=(0.0, 0.0, 0.0))
     |  
     |  __len__(self)
     |  
     |  __mul__(self, other)
     |  
     |  __ne__(self, other)
     |  
     |  __neg__(self)
     |  
     |  __repr__(self)
     |  
     |  __setitem__(self, index, value)
     |  
     |  __sub__(self, other)
     |  
     |  __truediv__(self, other)
     |  
     |  alerp(self, other, degrees)
     |  
     |  angleMod(self, f)
     |  
     |  angleVectors(self)
     |  
     |  binaryCompare(self, other)
     |  
     |  fromBytes(otherBytes, bigEnd=0)
     |  
     |  getStorage(self)
     |  
     |  lerp(self, other, fraction)
     |  
     |  normalize180(self)
     |  
     |  normalize360(self)
     |  
     |  toBytes(self)
     |  
     |  toDegrees(self)
     |  
     |  toMat43(self)
     |  
     |  toMat43_ArbConv(self, axes=(2, 1, 0), oris=(1.0, -1.0, 1.0))
     |  
     |  toMat43_XYZ(self, yFlip=1)
     |  
     |  toQuat(self)
     |  
     |  toRadians(self)
     |  
     |  toVec3(self)
     |      #all "to" functions assume angles are in degrees and not radians.
     |  
     |  toVec3Direct(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  __hash__ = None
    
    class NoeAnim(builtins.object)
     |  #main animation class
     |  #bones must be a list of NoeBone objects, frameMats must be a flat list of NoeMat43 objects
     |  
     |  Methods defined here:
     |  
     |  __init__(self, name, bones, numFrames, frameMats, frameRate=20.0, flags=0)
     |  
     |  __repr__(self)
     |  
     |  setFrameRate(self, frameRate)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class NoeBitStream(NoeUnpacker)
     |  #Universal binary reader/writer, also handles reading/writing data off of byte-aligned boundaries.
     |  #example use:
     |  #       writer = NoeBitStream()
     |  #       writer.writeString("Hello. I'm coming to get you.")
     |  #       open("somefile.bin", "wb").write(writer.getBuffer())
     |  
     |  Method resolution order:
     |      NoeBitStream
     |      NoeUnpacker
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, data=None, bigEndian=0)
     |  
     |  checkEOF(self)
     |  
     |  checkOverrun(self, size)
     |  
     |  fromUnpacker(self)
     |  
     |  getBitOffset(self)
     |  
     |  getBuffer(self, startOfs=None, endOfs=None)
     |  
     |  getOffset(self)
     |  
     |  getSize(self)
     |  
     |  padToSizeFromCurrentOffset(self, size)
     |  
     |  popOffset(self)
     |  
     |  pushOffset(self)
     |  
     |  read(self, fmtStr)
     |  
     |  readBits(self, numBits)
     |  
     |  readBool(self)
     |  
     |  readByte(self)
     |  
     |  readBytes(self, numBytes)
     |  
     |  readDouble(self)
     |  
     |  readFloat(self)
     |  
     |  readHalfFloat(self)
     |  
     |  readInt(self)
     |  
     |  readInt64(self)
     |  
     |  readRevBits(self, numBits)
     |  
     |  readShort(self)
     |  
     |  readString(self)
     |  
     |  readUByte(self)
     |  
     |  readUInt(self)
     |  
     |  readUInt24(self)
     |  
     |  readUInt64(self)
     |  
     |  readUShort(self)
     |  
     |  readline(self)
     |  
     |  seek(self, addr, isRelative=0)
     |  
     |  setBitOffset(self, ofs)
     |  
     |  setByteEndianForBits(self, bigEndian=0)
     |  
     |  setEndian(self, bigEndian=0)
     |  
     |  setOffset(self, ofs)
     |  
     |  tell(self)
     |  
     |  toUnpacker(self)
     |      #provide interfaces for the NoeUnpacker (better to use the base class if you want to use this functionality exclusively)
     |  
     |  writeBits(self, val, numBits)
     |  
     |  writeBool(self, val)
     |  
     |  writeByte(self, val)
     |  
     |  writeBytes(self, data)
     |  
     |  writeDouble(self, val)
     |  
     |  writeFloat(self, val)
     |  
     |  writeHalfFloat(self, val)
     |  
     |  writeInt(self, val)
     |  
     |  writeInt64(self, val)
     |  
     |  writeShort(self, val)
     |  
     |  writeString(self, str, writeTerminator=1)
     |  
     |  writeUByte(self, val)
     |  
     |  writeUInt(self, val)
     |  
     |  writeUInt64(self, val)
     |  
     |  writeUShort(self, val)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from NoeUnpacker:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class NoeBone(builtins.object)
     |  #model bone. bone hierarchy is defined by matching bone name to parentName.
     |  #index is used to ensure order and match to vertex weights. it is possible to have gaps in your bone list by specifying out-of-order indices.
     |  #NOTE: you don't need to specify parentIndex as long as you specify parentName. parentIndex is optional.
     |  
     |  Methods defined here:
     |  
     |  __init__(self, index, name, matrix, parentName=None, parentIndex=-1)
     |  
     |  __repr__(self)
     |  
     |  getMatrix(self)
     |  
     |  setMatrix(self, matrix)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class NoeFileStream(builtins.object)
     |  #not really fully compatible with NoeBitStream, but may be swapped out in some limited use cases
     |  
     |  Methods defined here:
     |  
     |  __init__(self, f, bigEndian=0)
     |      #f should be a file handle which has already been opened
     |  
     |  checkEOF(self)
     |  
     |  readBool(self)
     |  
     |  readByte(self)
     |  
     |  readBytes(self, numBytes)
     |  
     |  readDouble(self)
     |  
     |  readFloat(self)
     |  
     |  readInt(self)
     |  
     |  readInt64(self)
     |  
     |  readShort(self)
     |  
     |  readUByte(self)
     |  
     |  readUInt(self)
     |  
     |  readUInt24(self)
     |  
     |  readUInt64(self)
     |  
     |  readUShort(self)
     |  
     |  seek(self, addr, isRelative=0)
     |  
     |  setEndian(self, bigEndian=0)
     |  
     |  tell(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class NoeFlatWeights(builtins.object)
     |  #converts a list of NoeVertWeight objects into a flat list
     |  
     |  Methods defined here:
     |  
     |  __init__(self, vwList)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class NoeGlobalVert(builtins.object)
     |  #global vertex which references per-mesh data
     |  
     |  Methods defined here:
     |  
     |  __init__(self, meshIndex, vertIndex)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class NoeKeyFramedAnim(builtins.object)
     |  #keyframed animation class
     |  
     |  Methods defined here:
     |  
     |  __init__(self, name, bones, kfBones, frameRate=20.0, flags=0)
     |  
     |  __repr__(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class NoeKeyFramedBone(builtins.object)
     |  #keyframed bone class
     |  
     |  Methods defined here:
     |  
     |  __init__(self, boneIndex)
     |  
     |  hasAnyKeys(self)
     |  
     |  setRotation(self, keys, type=0, interpolationType=0)
     |      #for the set methods, keys should be a list of NoeKeyFramedValue or an object with similarly available members
     |  
     |  setScale(self, keys, type=0, interpolationType=0)
     |  
     |  setTranslation(self, keys, type=0, interpolationType=0)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class NoeKeyFramedValue(builtins.object)
     |  #keyframe data type
     |  
     |  Methods defined here:
     |  
     |  __init__(self, time, value)
     |      #value may be NoeQuat, NoeVec3, float, etc. depending on the data type specified
     |  
     |  __repr__(self)
     |  
     |  setComponentIndex(self, componentIndex)
     |  
     |  setEulerSingleAxisIndex(self, axisIndex)
     |  
     |  setExtraData(self, extraData)
     |  
     |  setFlags(self, flags)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class NoeMat43(builtins.object)
     |  #4x3 matrix
     |  
     |  Methods defined here:
     |  
     |  __add__(self, other)
     |  
     |  __eq__(self, other)
     |  
     |  __getitem__(self, index)
     |  
     |  __init__(self, mat43=((1.0, 0.0, 0.0), (0.0, 1.0, 0.0), (0.0, 0.0, 1.0), (0.0, 0.0, 0.0)))
     |  
     |  __len__(self)
     |  
     |  __mul__(self, other)
     |  
     |  __ne__(self, other)
     |  
     |  __neg__(self)
     |  
     |  __repr__(self)
     |  
     |  __setitem__(self, index, value)
     |  
     |  __sub__(self, other)
     |  
     |  binaryCompare(self, other)
     |  
     |  fromBytes(otherBytes, bigEnd=0)
     |  
     |  getStorage(self)
     |  
     |  inverse(self)
     |  
     |  isSkewed(self)
     |  
     |  lerp(self, other, fraction)
     |  
     |  orthogonalize(self)
     |  
     |  rotate(self, degrees, rotAngles, transposeRot=0)
     |  
     |  slerp(self, other, fraction)
     |  
     |  swapHandedness(self, axis=0)
     |  
     |  toAngles(self)
     |  
     |  toBytes(self)
     |  
     |  toMat44(self)
     |  
     |  toQuat(self)
     |  
     |  transformNormal(self, other)
     |  
     |  transformPoint(self, other)
     |  
     |  transformVec4(self, other)
     |  
     |  translate(self, trnVector)
     |  
     |  transpose(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  __hash__ = None
    
    class NoeMat44(builtins.object)
     |  #4x4 matrix
     |  #NoeMat44 operations (including to and from NoeMat43) have rows and columns swapped
     |  
     |  Methods defined here:
     |  
     |  __add__(self, other)
     |  
     |  __eq__(self, other)
     |  
     |  __getitem__(self, index)
     |  
     |  __init__(self, mat44=((1.0, 0.0, 0.0, 0.0), (0.0, 1.0, 0.0, 0.0), (0.0, 0.0, 1.0, 0.0), (0.0, 0.0, 0.0, 1.0)))
     |  
     |  __len__(self)
     |  
     |  __mul__(self, other)
     |  
     |  __ne__(self, other)
     |  
     |  __neg__(self)
     |  
     |  __repr__(self)
     |  
     |  __setitem__(self, index, value)
     |  
     |  __sub__(self, other)
     |  
     |  binaryCompare(self, other)
     |  
     |  fromBytes(otherBytes, bigEnd=0)
     |  
     |  getStorage(self)
     |  
     |  inverse(self)
     |  
     |  rotate(self, degrees, rotAngles)
     |  
     |  swapHandedness(self, axis=0)
     |  
     |  toBytes(self)
     |  
     |  toMat43(self)
     |  
     |  transformVec4(self, other)
     |  
     |  translate(self, trnVector)
     |  
     |  transpose(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  __hash__ = None
    
    class NoeMaterial(builtins.object)
     |  #material object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, name, texName)
     |  
     |  setAlphaTest(self, alphaVal)
     |  
     |  setAmbientColor(self, clr=[0.0, 0.0, 0.0, 0.0])
     |  
     |  setAnisotropy(self, anisoScale, anisoAngle)
     |  
     |  setBlendMode(self, blendSrc, blendDst)
     |      #uses gl blend string names (GL_ONE, GL_SRC_COLOR, etc)
     |  
     |  setBumpTexture(self, texName)
     |  
     |  setDefaultBlend(self, defaultBlend)
     |      #enables/disables default blending
     |  
     |  setDiffuseColor(self, clr=[1.0, 1.0, 1.0, 1.0])
     |  
     |  setEnvColor(self, clr=[1.0, 1.0, 1.0, 0.8])
     |      #4th component is fresnel term scale
     |  
     |  setEnvTexture(self, texName)
     |  
     |  setExpr_diffuse_a(self, exprStr)
     |  
     |  setExpr_diffuse_b(self, exprStr)
     |  
     |  setExpr_diffuse_g(self, exprStr)
     |  
     |  setExpr_diffuse_r(self, exprStr)
     |  
     |  setExpr_normaltexidx(self, exprStr)
     |  
     |  setExpr_specular_b(self, exprStr)
     |  
     |  setExpr_specular_exp(self, exprStr)
     |  
     |  setExpr_specular_g(self, exprStr)
     |  
     |  setExpr_specular_r(self, exprStr)
     |  
     |  setExpr_speculartexidx(self, exprStr)
     |  
     |  setExpr_texidx(self, exprStr)
     |  
     |  setExpr_uvrot_x(self, exprStr)
     |  
     |  setExpr_uvrot_y(self, exprStr)
     |  
     |  setExpr_uvrot_z(self, exprStr)
     |  
     |  setExpr_uvtrans_x(self, exprStr)
     |  
     |  setExpr_uvtrans_y(self, exprStr)
     |  
     |  setExpr_uvtrans_z(self, exprStr)
     |  
     |  setExpr_vclr_a(self, exprStr)
     |  
     |  setExpr_vclr_b(self, exprStr)
     |  
     |  setExpr_vclr_g(self, exprStr)
     |  
     |  setExpr_vclr_r(self, exprStr)
     |  
     |  setExpr_vnrm_x(self, exprStr)
     |  
     |  setExpr_vnrm_y(self, exprStr)
     |  
     |  setExpr_vnrm_z(self, exprStr)
     |  
     |  setExpr_vpos_x(self, exprStr)
     |      #sets expression strings. see pluginshare.h for a list of expression functions and variables.
     |  
     |  setExpr_vpos_y(self, exprStr)
     |  
     |  setExpr_vpos_z(self, exprStr)
     |  
     |  setExpr_vuv_u(self, exprStr)
     |  
     |  setExpr_vuv_v(self, exprStr)
     |  
     |  setFlags(self, flags, disableLighting=0)
     |  
     |  setFlags2(self, flags2)
     |  
     |  setMetal(self, metalScale, metalBias)
     |  
     |  setNextPass(self, nextPass)
     |  
     |  setNormalTexture(self, texName)
     |  
     |  setOcclTexture(self, texName)
     |  
     |  setOcclusionScale(self, occlScale)
     |  
     |  setOpacityTexture(self, texName)
     |  
     |  setRimLighting(self, rimColor=[1.0, 1.0, 1.0], rimSize=1.0, rimPow=3.0, rimBias=0.0, rimOfs=[0.0, 0.0, 0.0])
     |  
     |  setRoughness(self, roughnessScale, roughnessBias)
     |  
     |  setSkipRender(self, skipRender)
     |  
     |  setSpecularColor(self, clr=[1.0, 1.0, 1.0, 8.0])
     |      #4th component is the exponent
     |  
     |  setSpecularSwizzle(self, specularSwizzle)
     |  
     |  setSpecularTexture(self, texName)
     |  
     |  setTexture(self, texName)
     |      #texture names must match the name of a texture in the corresponding texture list to be applied
     |  
     |  setUserData(self, userTag, userData)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class NoeMesh(builtins.object)
     |  #main mesh class
     |  #all vertex types (positions, normals, uv's, etc) are expected to match in count, as they all share a single triangle list.
     |  #it's recommended that you use the rapi.rpg interface if you want a convenient means to convert different data/primitive types into a NoeModel with NoeMeshes.
     |  
     |  Methods defined here:
     |  
     |  __init__(self, triList, posList, name='default', materialName='default', glbVertIdx=-1, glbTriIdx=-1)
     |  
     |  __repr__(self)
     |  
     |  componentEmpty(component)
     |      #convenience function for checking if vertex components have valid content
     |  
     |  setBoneMap(self, boneMap)
     |  
     |  setColors(self, clrList)
     |      #color lists are rgba values stored in vec4's
     |  
     |  setFlatWeights(self, idxList, valList, weightsPerVert)
     |      #when provided, each list will be of size len(self.positions) * self.flatWeightsPerVert.
     |      #will only be provided when NMSHAREDFL_FLATWEIGHTS is used. as a convenience, NMSHAREDFL_FLATWEIGHTS_FORCE4 can be used in addition to force 4 weights per vert.
     |  
     |  setIndices(self, triList)
     |      #triangle lists are single-dimension lists of ints, expected to be divisible by 3
     |  
     |  setLightmap(self, lmMatName)
     |  
     |  setMaterial(self, materialName)
     |  
     |  setMorphList(self, morphList)
     |  
     |  setName(self, name)
     |  
     |  setNormals(self, nrmList)
     |  
     |  setPositions(self, posList)
     |  
     |  setPrimGlobals(self, glbVertIdx, glbTriIdx)
     |      #indices into the parent model's globalVtx/globalIdx lists on export
     |  
     |  setSourceName(self, sourceName)
     |  
     |  setTangents(self, tanList, slot=0)
     |      #translation component of NoeMat43 is ignored for tangents (matrix[0]=normal, matrix[1]=tangent, matrix[2]=bitangent)
     |  
     |  setTransformedVerts(self, positions, normals)
     |      #not currently used, planned in a future update
     |  
     |  setUVs(self, uvList, slot=0)
     |      #uv z component should typically be 0
     |  
     |  setUserStreams(self, userStreamList)
     |  
     |  setWeights(self, weightList)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class NoeModel(builtins.object)
     |  #main model class
     |  
     |  Methods defined here:
     |  
     |  __init__(self, meshes=[], bones=[], anims=[], modelMats=None)
     |  
     |  setAnims(self, anims)
     |      #animations will be applied to the model based on matching bone names from their local bone lists
     |  
     |  setBones(self, bones)
     |  
     |  setMeshes(self, meshes)
     |  
     |  setModelMaterials(self, modelMats)
     |  
     |  setPrimGlobals(self, globalVtx, globalIdx)
     |      #note that globalVtx/Idx are ignored by Noesis (only mesh geometry is used), but are provided for convenience when exporting
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class NoeModelMaterials(builtins.object)
     |  #material and texture lists must be provided to the Noesis API in one of these containers (for the purpose of possible future extension)
     |  
     |  Methods defined here:
     |  
     |  __init__(self, texList, matList)
     |      #must be initialized with lists of NoeTexture and NoeMaterial
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class NoeMorphFrame(builtins.object)
     |  #vertex morph frame - represents a single frame of vertex morph animation
     |  #note that it is valid for normals to be None (some models only want to provide positions for vertex anims), but positions should always be a valid list.
     |  #a vertex morph frame should always have as many entries in its vertex lists as other vertex components in the mesh it belongs to.
     |  
     |  Methods defined here:
     |  
     |  __init__(self, positions, normals)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class NoePS2VIFUnpack(builtins.object)
     |  #returned in a list by unpackPS2VIF
     |  
     |  Methods defined here:
     |  
     |  __init__(self, data, numElems, elemBits)
     |  
     |  __repr__(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class NoePSPVert(builtins.object)
     |  #returned by decodePSPVert
     |  
     |  Methods defined here:
     |  
     |  __init__(self, vertexDict)
     |  
     |  bindBuffers(self, vertexData, bindWeights=True)
     |      #bindBuffers takes a chunk of data and binds buffers using the provided properties.
     |      #only call this function if there's an active rapi module instance.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class NoePreserveRapiContext(builtins.object)
     |  Methods defined here:
     |  
     |  __enter__(self)
     |  
     |  __exit__(self, exc_type, exc_value, traceback)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class NoeProceduralAnim(builtins.object)
     |  #procedural animation object - specifies some parameters which can be baked into an animation using createProceduralAnim
     |  
     |  Methods defined here:
     |  
     |  __init__(self, boneName, angleAmount, axis, timeScale)
     |  
     |  setAngleAmount(self, angleAmount)
     |  
     |  setAxis(self, axis)
     |  
     |  setBoneName(self, boneName)
     |  
     |  setTimeScale(self, timeScale)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class NoeQuat(builtins.object)
     |  #quaternion
     |  
     |  Methods defined here:
     |  
     |  __add__(self, other)
     |  
     |  __eq__(self, other)
     |  
     |  __getitem__(self, index)
     |  
     |  __init__(self, quat=(0.0, 0.0, 0.0, 1.0))
     |  
     |  __len__(self)
     |  
     |  __mul__(self, other)
     |  
     |  __ne__(self, other)
     |  
     |  __neg__(self)
     |  
     |  __repr__(self)
     |  
     |  __setitem__(self, index, value)
     |  
     |  __sub__(self, other)
     |  
     |  binaryCompare(self, other)
     |  
     |  fromBytes(otherBytes, bigEnd=0)
     |  
     |  getStorage(self)
     |  
     |  length(self)
     |  
     |  lerp(self, other, fraction)
     |  
     |  normalize(self)
     |  
     |  slerp(self, other, fraction)
     |  
     |  toBytes(self)
     |  
     |  toMat43(self, transposed=0)
     |  
     |  toMatAngles(self)
     |  
     |  toQuat3(self)
     |  
     |  transformNormal(self, other)
     |  
     |  transformPoint(self, other)
     |  
     |  transpose(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  __hash__ = None
    
    class NoeQuat3(builtins.object)
     |  #packed quaternion
     |  
     |  Methods defined here:
     |  
     |  __eq__(self, other)
     |  
     |  __getitem__(self, index)
     |  
     |  __init__(self, quat3=(0.0, 0.0, 0.0))
     |  
     |  __len__(self)
     |  
     |  __ne__(self, other)
     |  
     |  __repr__(self)
     |  
     |  __setitem__(self, index, value)
     |  
     |  binaryCompare(self, other)
     |  
     |  fromBytes(otherBytes, bigEnd=0)
     |  
     |  getStorage(self)
     |  
     |  toBytes(self)
     |  
     |  toQuat(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  __hash__ = None
    
    class NoeSpline(builtins.object)
     |  #spline
     |  
     |  Methods defined here:
     |  
     |  __init__(self, knots, mins, maxs, flags)
     |  
     |  getLastOut(self, index)
     |  
     |  getLastPos(self, index)
     |  
     |  plotPoints(self, step, plotFunction)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class NoeSplineKnot(builtins.object)
     |  #spline knot
     |  
     |  Methods defined here:
     |  
     |  __init__(self, pos, inVec, outVec)
     |  
     |  __repr__(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class NoeSplineSet(builtins.object)
     |  #spline set
     |  
     |  Methods defined here:
     |  
     |  __init__(self, splines, mins, maxs)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class NoeTexture(builtins.object)
     |  #texture object
     |  #for supported pixel types, look at constants exposed by noesis module, such as NOESISTEX_RGB24, NOESISTEX_RGBA32, NOESISTEX_DXT1, etc.
     |  
     |  Methods defined here:
     |  
     |  __init__(self, name, width, height, pixelData, pixelType=1)
     |  
     |  __repr__(self)
     |  
     |  setFlags(self, flags)
     |  
     |  setFrameInfo(self, frameIndex, frameDelay)
     |  
     |  setHDRData(self, data, dataType, hdrFlags)
     |  
     |  setMipCount(self, mipCount)
     |  
     |  setPaletteData(self, palColorData, palColorSize, palIndexData, palIndexSize, palFlags)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class NoeUnpacker(builtins.object)
     |  #class wrapper to parse through some bytes using the struct unpacker
     |  
     |  Methods defined here:
     |  
     |  __init__(self, data)
     |  
     |  checkOverrun(self, size)
     |  
     |  read(self, fmtStr)
     |  
     |  seek(self, addr, isRelative=0)
     |  
     |  tell(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class NoeUserStream(builtins.object)
     |  #user stream class - arbitrary user-named streams of vertex data
     |  
     |  Methods defined here:
     |  
     |  __init__(self, name, data, elemSize, flags)
     |  
     |  __repr__(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class NoeVec3(builtins.object)
     |  #3-component Vector
     |  
     |  Methods defined here:
     |  
     |  __add__(self, other)
     |  
     |  __div__(self, other)
     |  
     |  __eq__(self, other)
     |  
     |  __getitem__(self, index)
     |  
     |  __init__(self, vec3=(0.0, 0.0, 0.0))
     |  
     |  __len__(self)
     |  
     |  __mul__(self, other)
     |  
     |  __ne__(self, other)
     |  
     |  __neg__(self)
     |  
     |  __repr__(self)
     |  
     |  __setitem__(self, index, value)
     |  
     |  __sub__(self, other)
     |  
     |  __truediv__(self, other)
     |  
     |  binaryCompare(self, other)
     |  
     |  cross(self, other)
     |  
     |  dot(self, other)
     |  
     |  fromBytes(otherBytes, bigEnd=0)
     |  
     |  getStorage(self)
     |  
     |  length(self)
     |  
     |  lengthSq(self)
     |  
     |  lerp(self, other, fraction)
     |  
     |  normalize(self)
     |  
     |  toAngles(self)
     |  
     |  toAnglesDirect(self)
     |  
     |  toBytes(self)
     |  
     |  toMat43(self)
     |  
     |  toVec4(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  __hash__ = None
    
    class NoeVec4(builtins.object)
     |  #4-component Vector
     |  
     |  Methods defined here:
     |  
     |  __add__(self, other)
     |  
     |  __div__(self, other)
     |  
     |  __eq__(self, other)
     |  
     |  __getitem__(self, index)
     |  
     |  __init__(self, vec4=(0.0, 0.0, 0.0, 0.0))
     |  
     |  __len__(self)
     |  
     |  __mul__(self, other)
     |  
     |  __ne__(self, other)
     |  
     |  __neg__(self)
     |  
     |  __repr__(self)
     |  
     |  __setitem__(self, index, value)
     |  
     |  __sub__(self, other)
     |  
     |  __truediv__(self, other)
     |  
     |  binaryCompare(self, other)
     |  
     |  dot(self, other)
     |  
     |  fromBytes(otherBytes, bigEnd=0)
     |  
     |  getStorage(self)
     |  
     |  length(self)
     |  
     |  lengthSq(self)
     |  
     |  lerp(self, other, fraction)
     |  
     |  normalize(self)
     |  
     |  toBytes(self)
     |  
     |  toVec3(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  __hash__ = None
    
    class NoeVertWeight(builtins.object)
     |  #vertex weight. number of indices and weights should match.
     |  
     |  Methods defined here:
     |  
     |  __init__(self, indices, weights)
     |  
     |  numWeights(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)

FUNCTIONS
    noeAsciiFromBytes(bar)
        #force filtering to ascii range
    
    noeCFloatRepr(obj)
        #returns a c-array style float representation of a list in a string
    
    noeCalculateLocalBoneTransforms(bones)
    
    noeCheckGeneric(data)
        #can be referenced to bypass data format checks (not recommended if it's possible to identify a format by its raw content)
    
    noeCmpToKey(cmpMethod)
    
    noeDefaultCertPath()
    
    noeListBytes(lobj)
        #converts a list into bytes (providing items in list support toBytes)
    
    noePack = pack(...)
        pack(fmt, v1, v2, ...) -> bytes
        
        Return a bytes object containing the values v1, v2, ... packed according
        to the format string fmt.  See help(struct) for more on format strings.
    
    noePadByteString(str, padLen)
        #convert a string to a padded bytearray
    
    noePaddedByteArray(data, alignment)
        #pad a bytearray out to a given alignment (assumes power of 2 alignment)
    
    noeParseToZero(data)
        #construct a bytearray containing the contents of data up to the first 0
    
    noeProcessImage(data, pixelImageInfo, processFunction, *processFunctionArgs)
        #pixelImageInfo should be a list of faceCount, mipCount, faceSize (total size of all mips for 1 face), mipsInfo
        #mipsInfo is then a list of tuples in the form of (mipWidth, mipHeight, mipOffset, mipSize)
    
    noeSafeGet(obj, attr, defaultValue=None)
        #returns None if the object doesn't have the given attribute, otherwise returns the attribute
    
    noeStrFromBytes(bar, enc='ASCII')
        #converts bytes to string assuming standard ascii encoding
    
    noeStringizeObjects(*args)
        #turns print-style args list into a string
    
    noeSuper(clobj)
        #shortcut to get superclass
    
    noeTupleToList(tup)
        #converts a single-dimension tuple to a list
    
    noeUnpack = unpack(...)
        unpack(fmt, buffer) -> (v1, v2, ...)
        
        Return a tuple containing values unpacked according to the format string
        fmt.  Requires len(buffer) == calcsize(fmt). See help(struct) for more
        on format strings.
    
    noeUnpackFrom = unpack_from(...)
        unpack_from(fmt, buffer, offset=0) -> (v1, v2, ...)
        
        Return a tuple containing values unpacked according to the format string
        fmt.  Requires len(buffer[offset:]) >= calcsize(fmt).  See help(struct)
        for more on format strings.

DATA
    NOESEEK_ABS = 0
    NOESEEK_REL = 1
    NOE_BIGENDIAN = 1
    NOE_LITTLEENDIAN = 0
    identityMat43Tuple = ((1.0, 0.0, 0.0), (0.0, 1.0, 0.0), (0.0, 0.0, 1.0...
    identityMat44Tuple = ((1.0, 0.0, 0.0, 0.0), (0.0, 1.0, 0.0, 0.0), (0.0...

FILE
    \noesisv4474\plugins\python\inc_noesis.py
