Help on module noesis:

NAME
    noesis

FUNCTIONS
    addOption(...)
        adds an option for the registered type. (issi)
    
    allocBytes(...)
        allocate byte array of predetermined size. (i)
    
    allocType(...)
        allocate an internal noesis python type. (var) types: readStream (sO) writeStream (s)
    
    anglesALerp(...)
        returns angles lerped across degrees. (OOf)
    
    anglesAngleVectors(...)
        returns vectors in mat43. (O)
    
    anglesMod(...)
        returns angle modulo. (Of)
    
    anglesNormalize180(...)
        returns angles normalized to 180 degrees. (O)
    
    anglesNormalize360(...)
        returns angles normalized to 360 degrees. (O)
    
    anglesToMat43(...)
        returns angle matrix. (O)
    
    anglesToMat43_XYZ(...)
        returns angle matrix. (Oi)
    
    anglesToQuat(...)
        returns angle quat. (O)
    
    anglesToVec3(...)
        returns angle vector. (O)
    
    anglesValidate(...)
        validates internal data as angles. (O)
    
    bezier3D(...)
        returns point on bezier spline. (Of)
    
    bezierTangent3D(...)
        returns tangent on a bezier spline. (Of)
    
    bilinLerp(...)
        bilinear interpolation. (ffffff)
    
    bsGetBitOfs(...)
        get bit offset. (O)
    
    bsGetBuffer(...)
        get a bytes copy of the current buffer. (O)
    
    bsGetBufferSlice(...)
        get a slice of the current buffer. (Oii)
    
    bsGetFlags(...)
        returns bitstream flags. (O)
    
    bsGetOfs(...)
        get bitstream offset. (O)
    
    bsGetSize(...)
        get the number of used bytes in the stream. (O)
    
    bsReadBits(...)
        reads specified number of bits. (Oi)
    
    bsReadBool(...)
        reads a bool. (O)
    
    bsReadByte(...)
        reads a byte. (O)
    
    bsReadBytes(...)
        reads specified number of bytes. (Oi)
    
    bsReadDouble(...)
        reads a double. (O)
    
    bsReadFloat(...)
        reads a float. (O)
    
    bsReadInt(...)
        reads an int. (O)
    
    bsReadInt64(...)
        reads an int64. (O)
    
    bsReadLine(...)
        reads a line. (O)
    
    bsReadRevBits(...)
        reads specified number of bits. (Oi)
    
    bsReadShort(...)
        reads a short. (O)
    
    bsReadString(...)
        reads a string. (O)
    
    bsReadUByte(...)
        reads an ubyte. (O)
    
    bsReadUInt(...)
        reads an uint. (O)
    
    bsReadUInt24(...)
        reads an uint24. (O)
    
    bsReadUInt64(...)
        reads an uint64. (O)
    
    bsReadUShort(...)
        reads an ushort. (O)
    
    bsSetBitOfs(...)
        set bit offset. (Oi)
    
    bsSetEndian(...)
        set bitstream endian. (Oi)
    
    bsSetFlags(...)
        set bitstream flags. (Oi)
    
    bsSetOfs(...)
        set bitstream offset. (Oi)
    
    bsWriteBits(...)
        writes specified number of bits. (Oii)
    
    bsWriteBool(...)
        writes a bool. (Oi)
    
    bsWriteByte(...)
        writes a byte. (Ob)
    
    bsWriteBytes(...)
        writes a bytes object. (OO)
    
    bsWriteDouble(...)
        writes a double. (Od)
    
    bsWriteFloat(...)
        writes a float. (Of)
    
    bsWriteInt(...)
        writes an int. (Oi)
    
    bsWriteInt64(...)
        writes an int64. (OL)
    
    bsWriteShort(...)
        writes a short. (Oh)
    
    bsWriteString(...)
        writes a string. (Osi)
    
    bsWriteUByte(...)
        writes an ubyte. (OB)
    
    bsWriteUInt(...)
        writes an uint. (OI)
    
    bsWriteUInt64(...)
        writes an uint64. (OK)
    
    bsWriteUShort(...)
        writes an ushort. (OH)
    
    checkToolMenuItem(...)
        checks or unchecks a tool's menu item. (ii)
    
    clearModalStatus(...)
        clears the modal status dialog if it's displayed.)
    
    closeDataViewer(...)
        closes data viewer.
    
    comClosePort(...)
        closes an open port. (i)
    
    comGetInfo(...)
        returns tuple of (baud rate, byte size, parity, stop bits). (i)
    
    comGetPortPaths(...)
        returns a list of (com index, com path) tuples.
    
    comGetTimeouts(...)
        returns tuple of (read interval timeout, read timeout multiplier, read timeout constant, write timeout multiplier, write timeout constant). (i)
    
    comOpenPort(...)
        returns a handle to the open port. (i)
    
    comRead(...)
        returns bytearray of data read. (ii)
    
    comSetInfo(...)
        sets port info. (iiiii)
    
    comSetTimeouts(...)
        sets port timeouts. (iiiiii)
    
    comWrite(...)
        returns number of bytes written. (iO)
    
    constLerp(...)
        constant interpolation. (fff)
    
    countBits(...)
        returns number of bits set. (I)
    
    cubicBezier3D(...)
        returns point on cubic bezier spline. (Of)
    
    cubicLerp(...)
        cubic interpolation. (fffff)
    
    debuggerReadData(...)
        returns a bytearray or None upon failure. (QQ)
    
    debuggerWriteData(...)
        returns False upon failure. (QO)
    
    deinterleaveBytes(...)
        pulls flat data out of an interleaved array. (Oiii)
    
    desktopCapClearOldestBuffer(...)
        internally frees the oldest buffer in the queue.
    
    desktopCapEnd(...)
        should only be called when desktopCapStart returns True.
    
    desktopCapGetOldestBuffer(...)
        returns tuple of (buffer, width, height), or None upon failure.
    
    desktopCapStart(...)
        returns True on success. (iiii)
    
    disableFormatByDescription(...)
        disables a format by matching the full name string. (s)
    
    doException(...)
        custom routine to raise an exception. (s)
    
    encodeArbitraryFloat(...)
        encodes arbitrary float. (fIII)
    
    encodeFloat16(...)
        returns half-float from float. (f)
    
    encodeMFFP(...)
        returns motorola FFP from float. (f)
    
    enterCustomVrMenuState(...)
        enter a custom menu. (OOO)
    
    fileIsLoadable(...)
        returns true if file is loadable. (s)
    
    freeModule(...)
        frees a module. (i)
    
    getAPIVersion(...)
        returns the api version.
    
    getArbitraryFloat(...)
        decodes arbitrary float. (IIII)
    
    getCharSplineSet(...)
        returns a NoeSplineSet for the given string character. (ord(c)) (i)
    
    getDataViewerSetting(...)
        returns value string, or None on failure. requires data viewer to be open. (s)
    
    getFloat16(...)
        returns float from half-float. (H)
    
    getFormatExtensionFlags(...)
        returns a combination of noesis.NFORMATFLAG values for a file extension. (s)
    
    getMFFP(...)
        returns float from motorola fast floating point format. (I)
    
    getMainPath(...)
        returns string to main executable file.
    
    getOpenPreviewFile(...)
        returns path string to open preview file, or None if nothing is open.
    
    getPluginsPath(...)
        returns path string to plugins directory.
    
    getResourceHandle(...)
        returns a resource handle. (i)
    
    getScenesPath(...)
        returns path string to scenes directory.
    
    getSelectedDirectory(...)
        returns path string to selected directory.
    
    getSelectedFile(...)
        returns path string to selected file.
    
    getToolFlags(...)
        returns a tool's flags. (i)
    
    getWindowHandle(...)
        gets native platform window handle.
    
    hermiteLerp(...)
        cubic hermite interpolation. (fffffff)
    
    instantiateModule(...)
        returns a handle to a new module. make sure you use freeModule when you're done!
    
    interleaveUniformBytes(...)
        pulls interleaved data out of flat arrays of uniform size. (Oii)
    
    isPreviewModuleRAPIValid(...)
        returns > 0 if preview module rapi is valid.
    
    isSupportedFileExtension(...)
        returns true if extension is somewhere in the list of known ones. (s)
    
    jaguarM68KDisassemble(...)
        returns tuple of (opSize, text). (Oi)
    
    jaguarRISCDisassemble(...)
        returns tuple of (opSize, text). (Oi)
    
    lerpSamples(...)
        returns interpolated tuple of values. (OI)
    
    linLerp(...)
        linear interpolation. (fff)
    
    loadImageRGBA(...)
        loads the first image in a file and returns a NoeTexture. (s)
    
    log2(...)
        returns base 2 logarithm. (O)
    
    logError(...)
        logs error. (s)
    
    logFlush(...)
        flush log.
    
    logOutput(...)
        prints to log. (s)
    
    logPopup(...)
        pops up the debug log.
    
    mat43Add(...)
        add 2 mat43's. (OO)
    
    mat43FromBytes(...)
        returns NoeMat43 from raw bytes. (Oi)
    
    mat43Inverse(...)
        returns inverse. (O)
    
    mat43IsSkewed(...)
        returns non-0 if skewed. (O)
    
    mat43Lerp(...)
        returns lerped matrices. (OOf)
    
    mat43Mul(...)
        multiply 2 mat43's. (OO)
    
    mat43Orthogonalize(...)
        returns orthogonalized matrix. (O)
    
    mat43Rotate(...)
        returns rotated matrix. (OfOi)
    
    mat43SLerp(...)
        returns slerped matrices. (OOf)
    
    mat43Sub(...)
        sub 2 mat43's. (OO)
    
    mat43SwapHandedness(...)
        returns swapped matrices. (Oi)
    
    mat43ToAngles(...)
        returns angles. (O)
    
    mat43ToBytes(...)
        returns raw 48-byte bytearray. (O)
    
    mat43ToMat44(...)
        returns mat44. (O)
    
    mat43ToQuat(...)
        returns quat. (O)
    
    mat43TransformNormal(...)
        returns transformed vec3. (OO)
    
    mat43TransformPoint(...)
        returns transformed vec3. (OO)
    
    mat43TransformVec4(...)
        returns transformed vec4. (OO)
    
    mat43Translate(...)
        returns translated matrix. (OO)
    
    mat43Transpose(...)
        returns transpose. (O)
    
    mat43Validate(...)
        validates internal data as a mat43. (O)
    
    mat44Add(...)
        add 2 mat44's. (OO)
    
    mat44FromBytes(...)
        returns NoeMat44 from raw bytes. (Oi)
    
    mat44Inverse(...)
        returns inverse. (O)
    
    mat44Mul(...)
        multiply 2 mat44's. (OO)
    
    mat44Rotate(...)
        returns rotated matrix. (OfO)
    
    mat44Sub(...)
        sub 2 mat44's. (OO)
    
    mat44SwapHandedness(...)
        returns swapped matrices. (Oi)
    
    mat44ToBytes(...)
        returns raw 48-byte bytearray. (O)
    
    mat44ToMat43(...)
        returns mat43. (O)
    
    mat44TransformVec4(...)
        returns transformed vec4. (OO)
    
    mat44Translate(...)
        returns translated matrix. (OO)
    
    mat44Transpose(...)
        returns transpose. (O)
    
    mat44Validate(...)
        validates internal data as a mat44. (O)
    
    messagePrompt(...)
        displays a message box. (s)
    
    morton2D(...)
        returns morton index from x,y coordinates. (ii)
    
    nativeYield(...)
        yields the native thread.
    
    nextPow2(...)
        returns next power of 2 value. (i)
    
    nybbleSwap(...)
        swap nybble order in bytearray. (O)
    
    openAndRemoveTempFile(...)
        opens a file in the main preview view without browsing to it, and deletes it after opening. (s)
    
    openDataViewer(...)
        opens data viewer. returns true if successful.
    
    openFile(...)
        opens a file in the main preview view. (s)
    
    optGetArg(...)
        returns an argument string for the option. (s)
    
    optWasInvoked(...)
        returns non-0 if option has been invoked. (s)
    
    planeFromPoints(...)
        returns a plane(NoeVec4) from 3 points. (OOO)
    
    popRAPIContext(...)
        pops the current rapi module context.
    
    pumpModalStatus(...)
        pumps the modal status dialog. (sf)
    
    pushRAPIContext(...)
        pushes the current rapi module context.
    
    quat3FromBytes(...)
        returns NoeQuat3 from raw bytes. (Oi)
    
    quat3ToBytes(...)
        returns raw 12-byte bytearray. (O)
    
    quat3ToQuat(...)
        converts quat3 to quat. (O)
    
    quat3Validate(...)
        validates internal data as quat3. (O)
    
    quatAdd(...)
        add 2 quats. (OO)
    
    quatFromBytes(...)
        returns NoeQuat from raw bytes. (Oi)
    
    quatLen(...)
        returns float len. (O)
    
    quatLerp(...)
        lerp between 2 quats. (OOf)
    
    quatMul(...)
        multiply 2 quats. (OO)
    
    quatNormalize(...)
        returns normalized quat. (O)
    
    quatSLerp(...)
        slerp between 2 quats. (OOf)
    
    quatSub(...)
        sub 2 quats. (OO)
    
    quatToAngles(...)
        converts quat to angles. (O)
    
    quatToBytes(...)
        returns raw 16-byte bytearray. (O)
    
    quatToMat43(...)
        converts quat to mat43. (Oi)
    
    quatToQuat3(...)
        converts quat to quat3. (O)
    
    quatTransformNormal(...)
        returns transformed vec3. (OO)
    
    quatTransformPoint(...)
        returns transformed vec3. (OO)
    
    quatTranspose(...)
        return transpose. (O)
    
    quatValidate(...)
        validates internal data as quat. (O)
    
    register(...)
        registers a file type. (ss)
    
    registerCleanupFunction(...)
        registers a cleanup function. (O)
    
    registerDebuggerDataHandler(...)
        registers a debugger data handler. returns a handle. (sO)
    
    registerDebuggerTickCallback(...)
        registers a debugger callback. returns a handle. (O)
    
    registerTool(...)
        registers a tool. returns a tool handle. (sO|s)
    
    registerVrMenuItem(...)
        registers a vr menu item. returns the menu item index. (sO)
    
    restoreCurrentRAPI(...)
        restores the rapi instance stored by storeCurrentRAPI.
    
    saveImageFromTexture(...)
        saves a NoeTexture to a file. (sO|O)
    
    saveImageRGBA(...)
        saves a NoeTexture to a file. (sO)
    
    setCustomVrMenuItem(...)
        sets the custom menu selection index. (i)
    
    setDataViewerSetting(...)
        sets value from string. requires data viewer to be open. (ss)
    
    setHandlerExtractArc(...)
        sets the archive handler. (iO)
    
    setHandlerLoadModel(...)
        sets the model load handler. (iO)
    
    setHandlerLoadRGBA(...)
        sets the image load handler. (iO)
    
    setHandlerTypeCheck(...)
        sets the type check handler. (iO)
    
    setHandlerWriteAnim(...)
        sets the animation write handler. (iO)
    
    setHandlerWriteModel(...)
        sets the model write handler. (iO)
    
    setHandlerWriteRGBA(...)
        sets the image write handler. (iO)
    
    setModuleRAPI(...)
        sets a module's rapi interface to the active rapi. pass -1 to clear the active rapi. (i)
    
    setPreviewModuleRAPI(...)
        sets the active preview module's rapi interface to the active rapi. throws an exception if there is no active preview module.
    
    setSelectedDirectory(...)
        returns True if successful. (u)
    
    setToolFlags(...)
        sets a tool's flags. (ii)
    
    setToolSubMenuName(...)
        sets a tool's submenu name. (is)
    
    setToolVisibleCallback(...)
        sets visibility callback (is - toolHandle, selectedFile/None) for tool menu item. unlike most python callbacks, no special context cleanup is performed around this callback, so take care inside of it. (iO)
    
    setTypeExportOptions(...)
        sets the type's export options. (is)
    
    setTypeSharedModelFlags(...)
        sets the type's shared model flags. (NMSHAREDFL_*) (ii)
    
    signedBits(...)
        returns signed interpretation of unsigned value. (KK)
    
    storeCurrentRAPI(...)
        stores a local handle to the current rapi instance, then invalidates the rapi instance.
    
    swapEndianArray(...)
        returns the entire array endian-swapped at x bytes. (Oi|ii)
    
    transformBits(...)
        returns value transformed using a bytearray matrix/LUT. (KO)
    
    transformBitsArray(...)
        as above, performing transforms on an input bytearray. (OIO)
    
    transformBitsInverse(...)
        returns value transformed using a bytearray matrix/LUT. (KO)
    
    transformBitsInverseArray(...)
        as above, performing transforms on an input bytearray. (OIO)
    
    triLerp(...)
        trilinear interpolation. (ffffff)
    
    usbCloseDevice(...)
        closes a handle opened by usbOpenDevice. (i)
    
    usbControlTransfer(...)
        reads data from endpoint. (iOiiii)
    
    usbGetEndpointCount(...)
        get endpoint count for current interface. (i)
    
    usbGetEndpointInfo(...)
        gets a tuple of parameters for specified ep in current interface. (ii)
    
    usbOpenDevice(...)
        returns a handle to the opened device. (uu)
    
    usbReadEndpoint(...)
        reads data from endpoint. (iii)
    
    usbReadEndpointId(...)
        reads data from endpoint. (iii)
    
    usbSetAltInterface(...)
        sets an alternate interface. (ii)
    
    usbSetEndpointTimeout(...)
        sets timeout on endpoint. (iii)
    
    usbSetEndpointTimeoutId(...)
        sets timeout on endpoint. (iii)
    
    usbWriteEndpoint(...)
        writes data to endpoint. (iiO)
    
    usbWriteEndpointId(...)
        writes data to endpoint. (iiO)
    
    userPrompt(...)
        displays a user input prompt. returns expected data type, or None on cancellation. (i|sssO)
    
    validateListType(...)
        validates list contains only a given type. does not throw an exception if the list is empty or None. (OO)
    
    validateListTypes(...)
        validates list contains only types. does not throw an exception if the list is empty or None. (OO)
    
    vec3Add(...)
        add 2 vec3's. (OO)
    
    vec3Cross(...)
        cross 2 vec3's. (OO)
    
    vec3Div(...)
        divide 2 vec3's. (OO)
    
    vec3Dot(...)
        dot 2 vec3's. (OO)
    
    vec3FromBytes(...)
        returns NoeVec3 from raw bytes. (Oi)
    
    vec3Len(...)
        length of vector. (O)
    
    vec3LenSq(...)
        square length of vector. (O)
    
    vec3Lerp(...)
        lerp 2 vec3's. (OOf)
    
    vec3Mul(...)
        multiply 2 vec3's. (OO)
    
    vec3Norm(...)
        return normalized vector. (O)
    
    vec3Sub(...)
        subtract 2 vec3's. (OO)
    
    vec3ToAngles(...)
        returns NoeAngles. (O)
    
    vec3ToBytes(...)
        returns raw 12-byte bytearray from NoeVec3. (O)
    
    vec3ToMat43(...)
        returns NoeMat43. (O)
    
    vec3ToVec4(...)
        returns NoeVec4. (O)
    
    vec3Validate(...)
        validates internal data as a vec3. (O)
    
    vec4Add(...)
        add 2 vec4's. (OO)
    
    vec4Div(...)
        divide 2 vec4's. (OO)
    
    vec4Dot(...)
        dot 2 vec4's. (OO)
    
    vec4FromBytes(...)
        returns NoeVec4 from raw bytes. (Oi)
    
    vec4Len(...)
        length of vec4. (O)
    
    vec4LenSq(...)
        square length. (O)
    
    vec4Lerp(...)
        lerp 2 vec4's. (OO)
    
    vec4Mul(...)
        multiply 2 vec4's. (OO)
    
    vec4Norm(...)
        return normalized vec4. (O)
    
    vec4Sub(...)
        subtract 2 vec4's. (OO)
    
    vec4ToBytes(...)
        returns raw 12-byte bytearray from NoeVec4. (O)
    
    vec4ToVec3(...)
        returns NoeVec3. (O)
    
    vec4Validate(...)
        validates internal data as a vec4. (O)

DATA
    BITSTREAMFL_BIGENDIAN = 65536
    BITSTREAMFL_DESCENDINGBITS = 131072
    BITSTREAMFL_USERFLAG1 = 16777216
    BITSTREAMFL_USERFLAG2 = 33554432
    BITSTREAMFL_USERFLAG3 = 67108864
    BITSTREAMFL_USERFLAG4 = 134217728
    BITSTREAMFL_USERFLAG5 = 268435456
    BITSTREAMFL_USERFLAG6 = 536870912
    BITSTREAMFL_USERFLAG7 = 1073741824
    BITSTREAMFL_USERFLAG8 = -2147483648
    BLITFLAG_ALLOWCLIP = 2
    BLITFLAG_ALPHABLEND = 1
    BLITFLAG_ALPHATEST = 4
    BONEFLAG_DECOMPLERP = 8
    BONEFLAG_DIRECTLERP = 2
    BONEFLAG_NOLERP = 4
    BONEFLAG_ORTHOLERP = 1
    DECODEFLAG_PS2SHIFT = 1
    FOURCC_ATI1 = 826889281
    FOURCC_ATI2 = 843666497
    FOURCC_BC1 = 827611204
    FOURCC_BC2 = 861165636
    FOURCC_BC3 = 894720068
    FOURCC_BC4 = 826889281
    FOURCC_BC5 = 843666497
    FOURCC_BC6H = 1211515714
    FOURCC_BC6S = 1396065090
    FOURCC_BC7 = 1480016706
    FOURCC_DX10 = 808540228
    FOURCC_DXT1 = 827611204
    FOURCC_DXT1NORMAL = 1311855684
    FOURCC_DXT3 = 861165636
    FOURCC_DXT5 = 894720068
    KFANIMFLAG_PLUSONE = 8
    KFANIMFLAG_ROUNDUP = 16
    KFANIMFLAG_SEPARATETS = 1
    KFANIMFLAG_TRANSPOSESCALE = 2
    KFANIMFLAG_USEBONETIMES = 4
    KFBONEFLAG_ADDITIVE = 2
    KFBONEFLAG_ADDITIVE_TP = 4
    KFBONEFLAG_MODELSPACE = 1
    KFBONEFLAG_NLERP = 8
    KFBONEFLAG_NLERP_TP = 16
    KFDFLAG_COMPONENT_MASK = 7
    KFDFLAG_EASE = 8
    KFDFLAG_SMOOTHTANGENTS = 64
    KFDFLAG_WRAP_TO_FIRST = 32
    KFDFLAG_WRAP_TO_LAST = 16
    MAX_NOESIS_PATH = 4096
    NANIMFLAG_FORCENAMEMATCH = 1
    NANIMFLAG_INVALIDHIERARCHY = 2
    NFORMATFLAG_ANIMWRITE = 32
    NFORMATFLAG_ARCREAD = 1
    NFORMATFLAG_IMGREAD = 2
    NFORMATFLAG_IMGWRITE = 4
    NFORMATFLAG_MODELREAD = 8
    NFORMATFLAG_MODELWRITE = 16
    NMATFLAG2_CAVITY_PBR_BLUE = 512
    NMATFLAG2_DECAL = 256
    NMATFLAG2_ENV_FLIP_Y = 128
    NMATFLAG2_LMMASK = 1
    NMATFLAG2_OCCL_BLUE = 64
    NMATFLAG2_OCCL_ISLM = 32
    NMATFLAG2_OCCL_UV1 = 16
    NMATFLAG2_OPACITY_UV1 = 1024
    NMATFLAG2_OPACITY_UV2 = 2048
    NMATFLAG2_PREFERPPL = 4
    NMATFLAG2_SPEC_IS_GAMMASPACE = 8
    NMATFLAG2_UV1_ANY = 1040
    NMATFLAG2_UV2_ANY = 2048
    NMATFLAG2_VCOLORMATDIFFUSE = 2
    NMATFLAG_BASICBLEND = 134217728
    NMATFLAG_BLENDEDNORMALS = 16
    NMATFLAG_DIFFUSE_UV1 = 1073741824
    NMATFLAG_ENV_FLIP = 1048576
    NMATFLAG_FORCESELFSORT = 268435456
    NMATFLAG_GAMMACORRECT = 8192
    NMATFLAG_KAJIYAKAY = 32
    NMATFLAG_NMAPSWAPRA = 1
    NMATFLAG_NORMALMAP_FLIPY = 131072
    NMATFLAG_NORMALMAP_NODERZ = 262144
    NMATFLAG_NORMAL_UV1 = 33554432
    NMATFLAG_PBR_ALBEDOENERGYCON = 4194304
    NMATFLAG_PBR_COMPENERGYCON = 8388608
    NMATFLAG_PBR_METAL = 65536
    NMATFLAG_PBR_ROUGHNESS_NRMALPHA = 536870912
    NMATFLAG_PBR_SPEC = 32768
    NMATFLAG_PBR_SPEC_IR_RG = 524288
    NMATFLAG_PREVIEWLOAD = 4
    NMATFLAG_SORT01 = 64
    NMATFLAG_SPEC_UV1 = 67108864
    NMATFLAG_SPRITE_FACINGXY = 16777216
    NMATFLAG_TWOSIDED = 2
    NMATFLAG_USELMUVS = 8
    NMATFLAG_UV1_ANY = 1174405120
    NMATFLAG_VCOLORSUBTRACT = 16384
    NMSHAREDFL_BONEPALETTE = 1024
    NMSHAREDFL_FLATWEIGHTS = 8
    NMSHAREDFL_FLATWEIGHTS_FORCE4 = 16
    NMSHAREDFL_NO_CREATE_UVS = 4096
    NMSHAREDFL_REVERSEWINDING = 32
    NMSHAREDFL_UNIQUEVERTS = 256
    NMSHAREDFL_WANTGLOBALARRAY = 2
    NMSHAREDFL_WANTNEIGHBORS = 1
    NMSHAREDFL_WANTTANGENTS = 4
    NMSHAREDFL_WANTTANGENTS4 = 64
    NMSHAREDFL_WANTTANGENTS4R = 128
    NOEBLEND_DST_ALPHA = 7
    NOEBLEND_DST_COLOR = 9
    NOEBLEND_NONE = 0
    NOEBLEND_ONE = 2
    NOEBLEND_ONE_MINUS_DST_ALPHA = 8
    NOEBLEND_ONE_MINUS_DST_COLOR = 10
    NOEBLEND_ONE_MINUS_SRC_ALPHA = 6
    NOEBLEND_ONE_MINUS_SRC_COLOR = 4
    NOEBLEND_SRC_ALPHA = 5
    NOEBLEND_SRC_ALPHA_SATURATE = 11
    NOEBLEND_SRC_COLOR = 3
    NOEBLEND_ZERO = 1
    NOEFSMODE_READBINARY = 0
    NOEFSMODE_READWRITEBINARY = 2
    NOEFSMODE_WRITEBINARY = 1
    NOEKF_INTERPOLATE_BEZIER = 5
    NOEKF_INTERPOLATE_BEZIER_R = 6
    NOEKF_INTERPOLATE_CATMULLROM = 2
    NOEKF_INTERPOLATE_HERMITE = 4
    NOEKF_INTERPOLATE_LINEAR = 0
    NOEKF_INTERPOLATE_NEAREST = 1
    NOEKF_INTERPOLATE_TCB = 3
    NOEKF_ROTATION_EULER_SINGLE = 2
    NOEKF_ROTATION_EULER_XYZ_3 = 1
    NOEKF_ROTATION_MATRIX_33 = 3
    NOEKF_ROTATION_QUATERNION_4 = 0
    NOEKF_SCALE_SCALAR_1 = 0
    NOEKF_SCALE_SINGLE = 1
    NOEKF_SCALE_TRANSPOSED_VECTOR_3 = 3
    NOEKF_SCALE_VECTOR_3 = 2
    NOEKF_TRANSLATION_SINGLE = 1
    NOEKF_TRANSLATION_VECTOR_3 = 0
    NOESISTEX_DXT1 = 3
    NOESISTEX_DXT3 = 4
    NOESISTEX_DXT5 = 5
    NOESISTEX_RGB24 = 2
    NOESISTEX_RGBA32 = 1
    NOESISTEX_UNKNOWN = 0
    NOESIS_PLUGINAPI_VERSION = 83
    NOESIS_PLUGIN_VERSION = 3
    NOESPLINEFLAG_CLOSED = 1
    NOEUSERVAL_BOOL = 4
    NOEUSERVAL_FILEPATH = 5
    NOEUSERVAL_FLOAT = 2
    NOEUSERVAL_FOLDERPATH = 6
    NOEUSERVAL_INT = 3
    NOEUSERVAL_NONE = 0
    NOEUSERVAL_SAVEFILEPATH = 7
    NOEUSERVAL_STRING = 1
    NOE_ENCODEDXT_BC1 = 0
    NOE_ENCODEDXT_BC2 = 3
    NOE_ENCODEDXT_BC3 = 1
    NOE_ENCODEDXT_BC4 = 2
    NOE_ENCODEDXT_BC5 = 4
    NOE_ENCODEDXT_BC6H = 5
    NOE_ENCODEDXT_BC6S = 6
    NOE_ENCODEDXT_BC7 = 7
    NSEQFLAG_NONLOOPING = 1
    NSEQFLAG_REVERSE = 2
    NTEXFLAG_CUBEMAP = 256
    NTEXFLAG_FILTER_NEAREST = 16
    NTEXFLAG_HDRISLINEAR = 2048
    NTEXFLAG_ISLINEAR = 1024
    NTEXFLAG_ISNORMALMAP = 1
    NTEXFLAG_PREVIEWLOAD = 128
    NTEXFLAG_SEGMENTED = 2
    NTEXFLAG_STEREO = 4
    NTEXFLAG_STEREO_SWAP = 8
    NTEXFLAG_WANTSEAMLESS = 4096
    NTEXFLAG_WRAP_CLAMP = 32
    NTEXFLAG_WRAP_MIRROR_CLAMP = 16384
    NTEXFLAG_WRAP_MIRROR_REPEAT = 8192
    NTEXFLAG_WRAP_REPEAT = 0
    NTEXFLAG_WRAP_SEP_ST = 32768
    NTEXFLAG_WRAP_T_CLAMP = 65536
    NTEXFLAG_WRAP_T_MIRROR_CLAMP = 262144
    NTEXFLAG_WRAP_T_MIRROR_REPEAT = 131072
    NTEXFLAG_WRAP_T_REPEAT = 0
    NTOOLFLAG_CONTEXTITEM = 1
    NTOOLFLAG_USERBITS = -268435456
    NUM_NOEKF_INTERPOLATION_TYPES = 7
    NUM_NOEKF_ROTATION_TYPES = 4
    NUM_NOEKF_SCALE_TYPES = 4
    NUM_NOEKF_TRANSLATION_TYPES = 2
    NUM_NOE_BLENDS = 12
    NUM_RPGEO_DATATYPES = 9
    NUM_RPGEO_TYPES = 12
    OPTFLAG_WANTARG = 1
    PS2_VIFCODE_BASE = 3
    PS2_VIFCODE_DIRECT = 80
    PS2_VIFCODE_DIRECTHL = 81
    PS2_VIFCODE_FLUSH = 17
    PS2_VIFCODE_FLUSHA = 19
    PS2_VIFCODE_FLUSHE = 16
    PS2_VIFCODE_ITOP = 4
    PS2_VIFCODE_MARK = 7
    PS2_VIFCODE_MPG = 74
    PS2_VIFCODE_MSCAL = 20
    PS2_VIFCODE_MSCALF = 21
    PS2_VIFCODE_MSCNT = 23
    PS2_VIFCODE_MSKPATH3 = 6
    PS2_VIFCODE_NOP = 0
    PS2_VIFCODE_OFFSET = 2
    PS2_VIFCODE_STCOL = 49
    PS2_VIFCODE_STCYCL = 1
    PS2_VIFCODE_STMASK = 32
    PS2_VIFCODE_STMOD = 5
    PS2_VIFCODE_STROW = 48
    PVRTC_DECODE_BICUBIC = 4
    PVRTC_DECODE_LINEARORDER = 2
    PVRTC_DECODE_PVRTC2 = 1
    PVRTC_DECODE_PVRTC2_NO_OR_WITH_0_ALPHA = 16
    PVRTC_DECODE_PVRTC2_ROTATE_BLOCK_PAL = 8
    RPGEODATA_BYTE = 7
    RPGEODATA_DOUBLE = 6
    RPGEODATA_FLOAT = 0
    RPGEODATA_HALFFLOAT = 5
    RPGEODATA_INT = 1
    RPGEODATA_SHORT = 3
    RPGEODATA_UBYTE = 8
    RPGEODATA_UINT = 2
    RPGEODATA_USHORT = 4
    RPGEO_NONE = 0
    RPGEO_POINTS = 1
    RPGEO_POLYGON = 5
    RPGEO_QUAD = 4
    RPGEO_QUAD_ABC_ACD = 10
    RPGEO_QUAD_ABC_BCD = 9
    RPGEO_QUAD_ABC_DCA = 11
    RPGEO_QUAD_STRIP = 7
    RPGEO_TRIANGLE = 2
    RPGEO_TRIANGLE_FAN = 6
    RPGEO_TRIANGLE_STRIP = 3
    RPGEO_TRIANGLE_STRIP_FLIPPED = 8
    RPGOPT_BIGENDIAN = 1
    RPGOPT_DERIVEBONEORIS = 8
    RPGOPT_FILLINWEIGHTS = 16
    RPGOPT_FIXTRIWINDINGS = 8192
    RPGOPT_GEOTWOSIDEDPRV = 2048
    RPGOPT_MORPH_RELATIVENORMALS = 256
    RPGOPT_MORPH_RELATIVEPOSITIONS = 128
    RPGOPT_NOINDEXLIMIT = 16384
    RPGOPT_SANITIZEWEIGHTS = 4096
    RPGOPT_SNAPTANGENTW = 512
    RPGOPT_SWAPHANDEDNESS = 32
    RPGOPT_TANMATROTATE = 4
    RPGOPT_TRIWINDBACKWARD = 2
    RPGOPT_UNSAFE = 64
    RPGVUFLAG_NOREUSE = 2
    RPGVUFLAG_PERINSTANCE = 1
    SHAREDSTRIP_LIST = 0
    SHAREDSTRIP_STRIP = 1
    TEXRGBAFLOAT_FLAG_NOHDR = 1
    TEXRGBAFLOAT_FLAG_NORMALIZE = 32
    TEXRGBAFLOAT_FLAG_RGB = 4
    TEXRGBAFLOAT_FLAG_SCALEANDBIAS = 2
    TEXRGBAFLOAT_FLAG_TOGAMMA = 16
    TEXRGBAFLOAT_FLAG_TOLINEAR = 8
    TILE_CHOP_FLAG_MIRROR_X = 16777216
    TILE_CHOP_FLAG_MIRROR_Y = 33554432
    g_flDegToRad = 0.01745329238474369
    g_flPI = 3.1415927410125732
    g_flRadToDeg = 57.2957763671875
    kNHDRTF_Lum_F32 = 2
    kNHDRTF_RGBA_F128 = 1
    kNHDRTF_RGBA_F64 = 3
    kNHDRTF_RGB_F96 = 0

FILE
    (built-in)
